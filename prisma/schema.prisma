// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  verifyToken   String?
  verifyExpires DateTime?
  isVerified    Boolean   @default(false)
  image         String?
  password      String? // Only for credentials provider
  role          Role      @default(USER)
  vendor        Vendor?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([email])
}

model Vendor {
  id           String    @id @default(cuid())
  businessName String
  description  String?
  address      String?
  phone        String?
  website      String?
  products     Product[]
  approved     Boolean   @default(false)
  userId       String    @unique
  user         User      @relation(fields: [userId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

enum Role {
  USER
  VENDOR
  ADMIN
}

model Category {
  id            String        @id @default(cuid())
  name          String
  slug          String        @unique
  subcategories Subcategory[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([slug])
}

model Subcategory {
  id         String    @id @default(cuid())
  name       String
  slug       String    @unique
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  products   Product[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([slug])
  @@index([categoryId])
}

enum ProductStatus {
  DRAFT
  PENDING
  APPROVED
  REJECTED
}

model Product {
  id              String        @id @default(cuid())
  title           String
  slug            String        @unique
  description     String
  price           Decimal
  stock           Int
  specifications  Json
  subcategory     Subcategory   @relation(fields: [subcategoryId], references: [id])
  subcategoryId   String
  status          ProductStatus @default(DRAFT)
  vendor          Vendor        @relation(fields: [vendorId], references: [id])
  vendorId        String
  isApproved      Boolean       @default(false)
  images          Image[]
  rejectionReason String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@index([vendorId])
  @@index([status])
}

model Image {
  id        String  @id @default(cuid())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@index([productId])
}
